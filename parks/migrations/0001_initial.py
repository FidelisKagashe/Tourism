# Generated by Django 4.2.7 on 2025-08-07 07:36

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='NationalPark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=120, unique=True)),
                ('park_type', models.CharField(choices=[('national_park', 'National Park'), ('game_reserve', 'Game Reserve'), ('conservation_area', 'Conservation Area'), ('marine_park', 'Marine Park'), ('forest_reserve', 'Forest Reserve')], default='national_park', max_length=20)),
                ('location', models.CharField(max_length=100)),
                ('region', models.CharField(max_length=50)),
                ('area_km2', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('elevation_min', models.IntegerField(blank=True, help_text='Minimum elevation in meters', null=True)),
                ('elevation_max', models.IntegerField(blank=True, help_text='Maximum elevation in meters', null=True)),
                ('established_year', models.IntegerField()),
                ('description', models.TextField()),
                ('short_description', models.TextField(max_length=300)),
                ('main_attractions', models.TextField(help_text='Main attractions and highlights')),
                ('wildlife_species', models.TextField(help_text='Key wildlife species found in the park')),
                ('vegetation_types', models.TextField(blank=True)),
                ('geological_features', models.TextField(blank=True)),
                ('best_time_to_visit', models.TextField()),
                ('recommended_duration', models.CharField(blank=True, max_length=100)),
                ('difficulty_level', models.CharField(choices=[('easy', 'Easy'), ('moderate', 'Moderate'), ('challenging', 'Challenging'), ('extreme', 'Extreme')], default='easy', max_length=15)),
                ('accessibility_info', models.TextField(blank=True)),
                ('entry_fee_citizen', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('entry_fee_resident', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('entry_fee_non_resident', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('accommodation_available', models.BooleanField(default=False)),
                ('camping_allowed', models.BooleanField(default=False)),
                ('guided_tours_available', models.BooleanField(default=True)),
                ('restaurant_facilities', models.BooleanField(default=False)),
                ('main_image', models.ImageField(blank=True, null=True, upload_to='parks/main/')),
                ('meta_title', models.CharField(blank=True, max_length=60)),
                ('meta_description', models.CharField(blank=True, max_length=160)),
                ('is_active', models.BooleanField(default=True)),
                ('featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'National Park',
                'verbose_name_plural': 'National Parks',
                'db_table': 'parks_nationalpark',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Wildlife',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('common_name', models.CharField(max_length=100)),
                ('scientific_name', models.CharField(blank=True, max_length=100)),
                ('category', models.CharField(choices=[('mammal', 'Mammal'), ('bird', 'Bird'), ('reptile', 'Reptile'), ('amphibian', 'Amphibian'), ('fish', 'Fish'), ('insect', 'Insect'), ('arachnid', 'Arachnid')], max_length=15)),
                ('conservation_status', models.CharField(choices=[('LC', 'Least Concern'), ('NT', 'Near Threatened'), ('VU', 'Vulnerable'), ('EN', 'Endangered'), ('CR', 'Critically Endangered'), ('EW', 'Extinct in the Wild'), ('EX', 'Extinct')], default='LC', max_length=2)),
                ('description', models.TextField()),
                ('physical_characteristics', models.TextField(blank=True)),
                ('habitat', models.TextField(blank=True)),
                ('diet', models.TextField(blank=True)),
                ('behavior', models.TextField(blank=True)),
                ('best_viewing_times', models.TextField(blank=True)),
                ('best_viewing_locations', models.TextField(blank=True)),
                ('main_image', models.ImageField(blank=True, null=True, upload_to='wildlife/')),
                ('is_big_five', models.BooleanField(default=False)),
                ('is_endemic', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parks', models.ManyToManyField(related_name='wildlife_set', to='parks.nationalpark')),
            ],
            options={
                'verbose_name': 'Wildlife Species',
                'verbose_name_plural': 'Wildlife Species',
                'db_table': 'parks_wildlife',
                'ordering': ['common_name'],
            },
        ),
        migrations.CreateModel(
            name='ParkImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='parks/gallery/')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('alt_text', models.CharField(blank=True, max_length=200)),
                ('is_featured', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('park', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='parks.nationalpark')),
            ],
            options={
                'verbose_name': 'Park Image',
                'verbose_name_plural': 'Park Images',
                'db_table': 'parks_parkimage',
                'ordering': ['order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ParkFacility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facility_type', models.CharField(choices=[('accommodation', 'Accommodation'), ('restaurant', 'Restaurant'), ('camping', 'Camping Site'), ('visitor_center', 'Visitor Center'), ('shop', 'Gift Shop'), ('medical', 'Medical Facility'), ('fuel_station', 'Fuel Station'), ('parking', 'Parking Area'), ('viewpoint', 'Viewpoint'), ('picnic_area', 'Picnic Area'), ('restroom', 'Restroom'), ('research_station', 'Research Station')], max_length=20)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('is_operational', models.BooleanField(default=True)),
                ('operating_hours', models.CharField(blank=True, max_length=100)),
                ('contact_info', models.CharField(blank=True, max_length=200)),
                ('capacity', models.IntegerField(blank=True, null=True)),
                ('features', models.TextField(blank=True, help_text='Special features or amenities')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('park', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facilities', to='parks.nationalpark')),
            ],
            options={
                'verbose_name': 'Park Facility',
                'verbose_name_plural': 'Park Facilities',
                'db_table': 'parks_parkfacility',
                'ordering': ['facility_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Destination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=120, unique=True)),
                ('destination_type', models.CharField(choices=[('wildlife_area', 'Wildlife Area'), ('viewpoint', 'Viewpoint'), ('waterfall', 'Waterfall'), ('lake', 'Lake'), ('mountain', 'Mountain'), ('crater', 'Crater'), ('hot_spring', 'Hot Spring'), ('archaeological_site', 'Archaeological Site'), ('cultural_site', 'Cultural Site'), ('beach', 'Beach'), ('island', 'Island'), ('village', 'Village')], max_length=20)),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('elevation', models.IntegerField(blank=True, help_text='Elevation in meters', null=True)),
                ('description', models.TextField()),
                ('short_description', models.TextField(max_length=300)),
                ('activities', models.TextField(blank=True, help_text='Activities available at this destination')),
                ('best_time_to_visit', models.TextField(blank=True)),
                ('accessibility', models.TextField(blank=True)),
                ('walking_distance_from_road', models.CharField(blank=True, max_length=100)),
                ('difficulty_level', models.CharField(choices=[('easy', 'Easy'), ('moderate', 'Moderate'), ('challenging', 'Challenging'), ('extreme', 'Extreme')], default='easy', max_length=15)),
                ('main_image', models.ImageField(blank=True, null=True, upload_to='destinations/')),
                ('is_active', models.BooleanField(default=True)),
                ('featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('park', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='destinations', to='parks.nationalpark')),
            ],
            options={
                'verbose_name': 'Destination',
                'verbose_name_plural': 'Destinations',
                'db_table': 'parks_destination',
                'ordering': ['name'],
            },
        ),
    ]
