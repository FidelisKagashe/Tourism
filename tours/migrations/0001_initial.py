# Generated by Django 4.2.7 on 2025-08-07 07:39

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('parks', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TourPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=220, unique=True)),
                ('subtitle', models.CharField(blank=True, max_length=300)),
                ('category', models.CharField(choices=[('safari', 'Wildlife Safari'), ('trekking', 'Mountain Trekking'), ('cultural', 'Cultural Experience'), ('beach', 'Beach & Marine'), ('adventure', 'Adventure'), ('photography', 'Photography Tour'), ('birding', 'Bird Watching'), ('honeymoon', 'Honeymoon Package'), ('family', 'Family Safari'), ('luxury', 'Luxury Experience')], max_length=20)),
                ('duration_days', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('duration_nights', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('difficulty_level', models.CharField(choices=[('easy', 'Easy'), ('moderate', 'Moderate'), ('challenging', 'Challenging'), ('extreme', 'Extreme')], max_length=15)),
                ('min_participants', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('max_participants', models.IntegerField(default=8, validators=[django.core.validators.MinValueValidator(1)])),
                ('min_age', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('max_age', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('description', models.TextField()),
                ('short_description', models.TextField(max_length=500)),
                ('highlights', models.JSONField(default=list, help_text='List of tour highlights')),
                ('detailed_itinerary', models.TextField()),
                ('inclusions', models.JSONField(default=list, help_text="What's included in the tour")),
                ('exclusions', models.JSONField(default=list, help_text="What's not included")),
                ('price_budget', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_standard', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_luxury', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('single_supplement_budget', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('single_supplement_standard', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('single_supplement_luxury', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('accommodation_type', models.CharField(choices=[('camping', 'Camping'), ('lodge', 'Safari Lodge'), ('hotel', 'Hotel'), ('tented_camp', 'Tented Camp'), ('luxury_camp', 'Luxury Camp'), ('mobile_camp', 'Mobile Camp')], max_length=20)),
                ('accommodation_details', models.TextField(blank=True)),
                ('transportation_details', models.TextField(blank=True)),
                ('available_year_round', models.BooleanField(default=True)),
                ('best_months', models.JSONField(default=list, help_text='Best months to take this tour')),
                ('fitness_requirements', models.TextField(blank=True)),
                ('equipment_needed', models.TextField(blank=True)),
                ('vaccination_requirements', models.TextField(blank=True)),
                ('visa_requirements', models.TextField(blank=True)),
                ('main_image', models.ImageField(blank=True, null=True, upload_to='tours/main/')),
                ('meta_title', models.CharField(blank=True, max_length=60)),
                ('meta_description', models.CharField(blank=True, max_length=160)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_popular', models.BooleanField(default=False)),
                ('total_bookings', models.IntegerField(default=0)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('total_reviews', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parks_visited', models.ManyToManyField(related_name='tour_packages', to='parks.nationalpark')),
            ],
            options={
                'verbose_name': 'Tour Package',
                'verbose_name_plural': 'Tour Packages',
                'db_table': 'tours_tourpackage',
                'ordering': ['-is_featured', '-is_popular', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TourPackageExtra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extra_type', models.CharField(choices=[('accommodation', 'Accommodation Upgrade'), ('activity', 'Additional Activity'), ('equipment', 'Equipment Rental'), ('service', 'Additional Service'), ('transport', 'Transport Option'), ('meal', 'Meal Option'), ('insurance', 'Travel Insurance')], max_length=20)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('price_usd', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_available', models.BooleanField(default=True)),
                ('max_quantity_per_booking', models.IntegerField(default=1)),
                ('requires_advance_booking', models.BooleanField(default=False)),
                ('advance_booking_days', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tour_package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extras', to='tours.tourpackage')),
            ],
            options={
                'verbose_name': 'Tour Package Extra',
                'verbose_name_plural': 'Tour Package Extras',
                'db_table': 'tours_tourpackageextra',
                'ordering': ['extra_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TourImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='tours/gallery/')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('alt_text', models.CharField(blank=True, max_length=200)),
                ('is_featured', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tour_package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='tours.tourpackage')),
            ],
            options={
                'verbose_name': 'Tour Image',
                'verbose_name_plural': 'Tour Images',
                'db_table': 'tours_tourimage',
                'ordering': ['order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TourGuide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_number', models.CharField(max_length=50, unique=True)),
                ('certification_level', models.CharField(choices=[('basic', 'Basic Certified'), ('advanced', 'Advanced Certified'), ('specialist', 'Specialist'), ('master', 'Master Guide')], max_length=15)),
                ('years_of_experience', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('languages', models.JSONField(default=list, help_text='List of languages spoken')),
                ('specializations', models.TextField(help_text='Areas of expertise (wildlife, culture, trekking, etc.)')),
                ('bio', models.TextField()),
                ('qualifications', models.TextField(blank=True)),
                ('certifications', models.TextField(blank=True)),
                ('phone_number', models.CharField(max_length=20)),
                ('emergency_contact', models.CharField(blank=True, max_length=100)),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='guides/profiles/')),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('total_reviews', models.IntegerField(default=0)),
                ('is_available', models.BooleanField(default=True)),
                ('max_group_size', models.IntegerField(default=8)),
                ('daily_rate_usd', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parks_covered', models.ManyToManyField(related_name='guides', to='parks.nationalpark')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='guide_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tour Guide',
                'verbose_name_plural': 'Tour Guides',
                'db_table': 'tours_tourguide',
                'ordering': ['-average_rating', 'user__first_name'],
            },
        ),
        migrations.CreateModel(
            name='TourItineraryDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_number', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('activities', models.JSONField(default=list, help_text='List of activities for the day')),
                ('overnight_location', models.CharField(blank=True, max_length=100)),
                ('meals_included', models.JSONField(default=list, help_text='Meals included (breakfast, lunch, dinner)')),
                ('travel_distance', models.CharField(blank=True, help_text="e.g., '120km, 3 hours'", max_length=100)),
                ('travel_method', models.CharField(blank=True, help_text="e.g., 'Safari vehicle', 'Walking'", max_length=100)),
                ('day_image', models.ImageField(blank=True, null=True, upload_to='tours/itinerary/')),
                ('tour_package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itinerary_days', to='tours.tourpackage')),
            ],
            options={
                'verbose_name': 'Tour Itinerary Day',
                'verbose_name_plural': 'Tour Itinerary Days',
                'db_table': 'tours_touritineraryday',
                'ordering': ['tour_package', 'day_number'],
                'unique_together': {('tour_package', 'day_number')},
            },
        ),
        migrations.CreateModel(
            name='TourAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('price_modifier_budget', models.DecimalField(decimal_places=2, default=1.0, max_digits=5)),
                ('price_modifier_standard', models.DecimalField(decimal_places=2, default=1.0, max_digits=5)),
                ('price_modifier_luxury', models.DecimalField(decimal_places=2, default=1.0, max_digits=5)),
                ('max_participants', models.IntegerField()),
                ('booked_participants', models.IntegerField(default=0)),
                ('is_available', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_guide', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tours.tourguide')),
                ('tour_package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability', to='tours.tourpackage')),
            ],
            options={
                'verbose_name': 'Tour Availability',
                'verbose_name_plural': 'Tour Availability',
                'db_table': 'tours_touravailability',
                'ordering': ['start_date'],
                'unique_together': {('tour_package', 'start_date')},
            },
        ),
    ]
